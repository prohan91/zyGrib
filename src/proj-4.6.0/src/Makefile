#############################################################################
# Makefile for building: libproj.a
# Generated by qmake (2.01a) (Qt 4.7.4) on: Sun Mar 11 21:24:57 2012
# Project:  proj.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile proj.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -fPIC -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = aasincos.c \
		adjlon.c \
		bch2bps.c \
		bchgen.c \
		biveval.c \
		dmstor.c \
		emess.c \
		geocent.c \
		mk_cheby.c \
		nad_cvt.c \
		nad_init.c \
		nad_intr.c \
		PJ_aea.c \
		PJ_aeqd.c \
		PJ_airy.c \
		PJ_aitoff.c \
		pj_apply_gridshift.c \
		PJ_august.c \
		pj_auth.c \
		PJ_bacon.c \
		PJ_bipc.c \
		PJ_boggs.c \
		PJ_bonne.c \
		PJ_cass.c \
		PJ_cc.c \
		PJ_cea.c \
		PJ_chamb.c \
		PJ_collg.c \
		PJ_crast.c \
		pj_datum_set.c \
		pj_datums.c \
		PJ_denoy.c \
		pj_deriv.c \
		PJ_eck1.c \
		PJ_eck2.c \
		PJ_eck3.c \
		PJ_eck4.c \
		PJ_eck5.c \
		pj_ellps.c \
		pj_ell_set.c \
		PJ_eqc.c \
		PJ_eqdc.c \
		pj_errno.c \
		pj_factors.c \
		PJ_fahey.c \
		PJ_fouc_s.c \
		pj_fwd.c \
		PJ_gall.c \
		pj_gauss.c \
		pj_geocent.c \
		PJ_geos.c \
		PJ_gins8.c \
		PJ_gnom.c \
		PJ_gn_sinu.c \
		PJ_goode.c \
		pj_gridinfo.c \
		pj_gridlist.c \
		PJ_hammer.c \
		PJ_hatano.c \
		PJ_imw_p.c \
		pj_init.c \
		pj_inv.c \
		PJ_krovak.c \
		PJ_labrd.c \
		PJ_laea.c \
		PJ_lagrng.c \
		PJ_larr.c \
		PJ_lask.c \
		pj_latlong.c \
		PJ_lcca.c \
		PJ_lcc.c \
		pj_list.c \
		PJ_loxim.c \
		PJ_lsat.c \
		pj_malloc.c \
		PJ_mbtfpp.c \
		PJ_mbtfpq.c \
		PJ_mbt_fps.c \
		PJ_merc.c \
		PJ_mill.c \
		pj_mlfn.c \
		PJ_mod_ster.c \
		PJ_moll.c \
		pj_msfn.c \
		PJ_nell_h.c \
		PJ_nell.c \
		PJ_nocol.c \
		PJ_nsper.c \
		PJ_nzmg.c \
		PJ_ob_tran.c \
		PJ_ocea.c \
		PJ_oea.c \
		PJ_omerc.c \
		pj_open_lib.c \
		PJ_ortho.c \
		pj_param.c \
		pj_phi2.c \
		PJ_poly.c \
		pj_pr_list.c \
		PJ_putp2.c \
		PJ_putp3.c \
		PJ_putp4p.c \
		PJ_putp5.c \
		PJ_putp6.c \
		pj_qsfn.c \
		pj_release.c \
		PJ_robin.c \
		PJ_rpoly.c \
		PJ_sconics.c \
		PJ_somerc.c \
		PJ_sterea.c \
		PJ_stere.c \
		pj_strerrno.c \
		PJ_sts.c \
		PJ_tcc.c \
		PJ_tcea.c \
		PJ_tmerc.c \
		PJ_tpeqd.c \
		pj_transform.c \
		pj_tsfn.c \
		pj_units.c \
		PJ_urm5.c \
		PJ_urmfps.c \
		pj_utils.c \
		PJ_vandg2.c \
		PJ_vandg4.c \
		PJ_vandg.c \
		PJ_wag2.c \
		PJ_wag3.c \
		PJ_wag7.c \
		PJ_wink1.c \
		PJ_wink2.c \
		pj_zpoly1.c \
		proj_mdist.c \
		proj_rouss.c \
		rtodms.c \
		vector1.c 
OBJECTS       = aasincos.o \
		adjlon.o \
		bch2bps.o \
		bchgen.o \
		biveval.o \
		dmstor.o \
		emess.o \
		geocent.o \
		mk_cheby.o \
		nad_cvt.o \
		nad_init.o \
		nad_intr.o \
		PJ_aea.o \
		PJ_aeqd.o \
		PJ_airy.o \
		PJ_aitoff.o \
		pj_apply_gridshift.o \
		PJ_august.o \
		pj_auth.o \
		PJ_bacon.o \
		PJ_bipc.o \
		PJ_boggs.o \
		PJ_bonne.o \
		PJ_cass.o \
		PJ_cc.o \
		PJ_cea.o \
		PJ_chamb.o \
		PJ_collg.o \
		PJ_crast.o \
		pj_datum_set.o \
		pj_datums.o \
		PJ_denoy.o \
		pj_deriv.o \
		PJ_eck1.o \
		PJ_eck2.o \
		PJ_eck3.o \
		PJ_eck4.o \
		PJ_eck5.o \
		pj_ellps.o \
		pj_ell_set.o \
		PJ_eqc.o \
		PJ_eqdc.o \
		pj_errno.o \
		pj_factors.o \
		PJ_fahey.o \
		PJ_fouc_s.o \
		pj_fwd.o \
		PJ_gall.o \
		pj_gauss.o \
		pj_geocent.o \
		PJ_geos.o \
		PJ_gins8.o \
		PJ_gnom.o \
		PJ_gn_sinu.o \
		PJ_goode.o \
		pj_gridinfo.o \
		pj_gridlist.o \
		PJ_hammer.o \
		PJ_hatano.o \
		PJ_imw_p.o \
		pj_init.o \
		pj_inv.o \
		PJ_krovak.o \
		PJ_labrd.o \
		PJ_laea.o \
		PJ_lagrng.o \
		PJ_larr.o \
		PJ_lask.o \
		pj_latlong.o \
		PJ_lcca.o \
		PJ_lcc.o \
		pj_list.o \
		PJ_loxim.o \
		PJ_lsat.o \
		pj_malloc.o \
		PJ_mbtfpp.o \
		PJ_mbtfpq.o \
		PJ_mbt_fps.o \
		PJ_merc.o \
		PJ_mill.o \
		pj_mlfn.o \
		PJ_mod_ster.o \
		PJ_moll.o \
		pj_msfn.o \
		PJ_nell_h.o \
		PJ_nell.o \
		PJ_nocol.o \
		PJ_nsper.o \
		PJ_nzmg.o \
		PJ_ob_tran.o \
		PJ_ocea.o \
		PJ_oea.o \
		PJ_omerc.o \
		pj_open_lib.o \
		PJ_ortho.o \
		pj_param.o \
		pj_phi2.o \
		PJ_poly.o \
		pj_pr_list.o \
		PJ_putp2.o \
		PJ_putp3.o \
		PJ_putp4p.o \
		PJ_putp5.o \
		PJ_putp6.o \
		pj_qsfn.o \
		pj_release.o \
		PJ_robin.o \
		PJ_rpoly.o \
		PJ_sconics.o \
		PJ_somerc.o \
		PJ_sterea.o \
		PJ_stere.o \
		pj_strerrno.o \
		PJ_sts.o \
		PJ_tcc.o \
		PJ_tcea.o \
		PJ_tmerc.o \
		PJ_tpeqd.o \
		pj_transform.o \
		pj_tsfn.o \
		pj_units.o \
		PJ_urm5.o \
		PJ_urmfps.o \
		pj_utils.o \
		PJ_vandg2.o \
		PJ_vandg4.o \
		PJ_vandg.o \
		PJ_wag2.o \
		PJ_wag3.o \
		PJ_wag7.o \
		PJ_wink1.o \
		PJ_wink2.o \
		pj_zpoly1.o \
		proj_mdist.o \
		proj_rouss.o \
		rtodms.o \
		vector1.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		proj.pro
QMAKE_TARGET  = proj
DESTDIR       = 
TARGET        = libproj.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: proj.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile proj.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/staticlib.prf:
/usr/share/qt4/mkspecs/features/static.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile proj.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/proj1.0.0 || $(MKDIR) .tmp/proj1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/proj1.0.0/ && $(COPY_FILE) --parents aasincos.c adjlon.c bch2bps.c bchgen.c biveval.c dmstor.c emess.c geocent.c mk_cheby.c nad_cvt.c nad_init.c nad_intr.c PJ_aea.c PJ_aeqd.c PJ_airy.c PJ_aitoff.c pj_apply_gridshift.c PJ_august.c pj_auth.c PJ_bacon.c PJ_bipc.c PJ_boggs.c PJ_bonne.c PJ_cass.c PJ_cc.c PJ_cea.c PJ_chamb.c PJ_collg.c PJ_crast.c pj_datum_set.c pj_datums.c PJ_denoy.c pj_deriv.c PJ_eck1.c PJ_eck2.c PJ_eck3.c PJ_eck4.c PJ_eck5.c pj_ellps.c pj_ell_set.c PJ_eqc.c PJ_eqdc.c pj_errno.c pj_factors.c PJ_fahey.c PJ_fouc_s.c pj_fwd.c PJ_gall.c pj_gauss.c pj_geocent.c PJ_geos.c PJ_gins8.c PJ_gnom.c PJ_gn_sinu.c PJ_goode.c pj_gridinfo.c pj_gridlist.c PJ_hammer.c PJ_hatano.c PJ_imw_p.c pj_init.c pj_inv.c PJ_krovak.c PJ_labrd.c PJ_laea.c PJ_lagrng.c PJ_larr.c PJ_lask.c pj_latlong.c PJ_lcca.c PJ_lcc.c pj_list.c PJ_loxim.c PJ_lsat.c pj_malloc.c PJ_mbtfpp.c PJ_mbtfpq.c PJ_mbt_fps.c PJ_merc.c PJ_mill.c pj_mlfn.c PJ_mod_ster.c PJ_moll.c pj_msfn.c PJ_nell_h.c PJ_nell.c PJ_nocol.c PJ_nsper.c PJ_nzmg.c PJ_ob_tran.c PJ_ocea.c PJ_oea.c PJ_omerc.c pj_open_lib.c PJ_ortho.c pj_param.c pj_phi2.c PJ_poly.c pj_pr_list.c PJ_putp2.c PJ_putp3.c PJ_putp4p.c PJ_putp5.c PJ_putp6.c pj_qsfn.c pj_release.c PJ_robin.c PJ_rpoly.c PJ_sconics.c PJ_somerc.c PJ_sterea.c PJ_stere.c pj_strerrno.c PJ_sts.c PJ_tcc.c PJ_tcea.c PJ_tmerc.c PJ_tpeqd.c pj_transform.c pj_tsfn.c pj_units.c PJ_urm5.c PJ_urmfps.c pj_utils.c PJ_vandg2.c PJ_vandg4.c PJ_vandg.c PJ_wag2.c PJ_wag3.c PJ_wag7.c PJ_wink1.c PJ_wink2.c pj_zpoly1.c proj_mdist.c proj_rouss.c rtodms.c vector1.c .tmp/proj1.0.0/ && (cd `dirname .tmp/proj1.0.0` && $(TAR) proj1.0.0.tar proj1.0.0 && $(COMPRESS) proj1.0.0.tar) && $(MOVE) `dirname .tmp/proj1.0.0`/proj1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/proj1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

aasincos.o: aasincos.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o aasincos.o aasincos.c

adjlon.o: adjlon.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o adjlon.o adjlon.c

bch2bps.o: bch2bps.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o bch2bps.o bch2bps.c

bchgen.o: bchgen.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o bchgen.o bchgen.c

biveval.o: biveval.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o biveval.o biveval.c

dmstor.o: dmstor.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o dmstor.o dmstor.c

emess.o: emess.c proj_api.h \
		emess.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o emess.o emess.c

geocent.o: geocent.c geocent.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o geocent.o geocent.c

mk_cheby.o: mk_cheby.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o mk_cheby.o mk_cheby.c

nad_cvt.o: nad_cvt.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o nad_cvt.o nad_cvt.c

nad_init.o: nad_init.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o nad_init.o nad_init.c

nad_intr.o: nad_intr.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o nad_intr.o nad_intr.c

PJ_aea.o: PJ_aea.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_aea.o PJ_aea.c

PJ_aeqd.o: PJ_aeqd.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_aeqd.o PJ_aeqd.c

PJ_airy.o: PJ_airy.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_airy.o PJ_airy.c

PJ_aitoff.o: PJ_aitoff.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_aitoff.o PJ_aitoff.c

pj_apply_gridshift.o: pj_apply_gridshift.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_apply_gridshift.o pj_apply_gridshift.c

PJ_august.o: PJ_august.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_august.o PJ_august.c

pj_auth.o: pj_auth.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_auth.o pj_auth.c

PJ_bacon.o: PJ_bacon.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_bacon.o PJ_bacon.c

PJ_bipc.o: PJ_bipc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_bipc.o PJ_bipc.c

PJ_boggs.o: PJ_boggs.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_boggs.o PJ_boggs.c

PJ_bonne.o: PJ_bonne.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_bonne.o PJ_bonne.c

PJ_cass.o: PJ_cass.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_cass.o PJ_cass.c

PJ_cc.o: PJ_cc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_cc.o PJ_cc.c

PJ_cea.o: PJ_cea.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_cea.o PJ_cea.c

PJ_chamb.o: PJ_chamb.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_chamb.o PJ_chamb.c

PJ_collg.o: PJ_collg.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_collg.o PJ_collg.c

PJ_crast.o: PJ_crast.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_crast.o PJ_crast.c

pj_datum_set.o: pj_datum_set.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_datum_set.o pj_datum_set.c

pj_datums.o: pj_datums.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_datums.o pj_datums.c

PJ_denoy.o: PJ_denoy.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_denoy.o PJ_denoy.c

pj_deriv.o: pj_deriv.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_deriv.o pj_deriv.c

PJ_eck1.o: PJ_eck1.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_eck1.o PJ_eck1.c

PJ_eck2.o: PJ_eck2.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_eck2.o PJ_eck2.c

PJ_eck3.o: PJ_eck3.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_eck3.o PJ_eck3.c

PJ_eck4.o: PJ_eck4.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_eck4.o PJ_eck4.c

PJ_eck5.o: PJ_eck5.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_eck5.o PJ_eck5.c

pj_ellps.o: pj_ellps.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_ellps.o pj_ellps.c

pj_ell_set.o: pj_ell_set.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_ell_set.o pj_ell_set.c

PJ_eqc.o: PJ_eqc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_eqc.o PJ_eqc.c

PJ_eqdc.o: PJ_eqdc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_eqdc.o PJ_eqdc.c

pj_errno.o: pj_errno.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_errno.o pj_errno.c

pj_factors.o: pj_factors.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_factors.o pj_factors.c

PJ_fahey.o: PJ_fahey.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_fahey.o PJ_fahey.c

PJ_fouc_s.o: PJ_fouc_s.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_fouc_s.o PJ_fouc_s.c

pj_fwd.o: pj_fwd.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_fwd.o pj_fwd.c

PJ_gall.o: PJ_gall.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_gall.o PJ_gall.c

pj_gauss.o: pj_gauss.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_gauss.o pj_gauss.c

pj_geocent.o: pj_geocent.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_geocent.o pj_geocent.c

PJ_geos.o: PJ_geos.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_geos.o PJ_geos.c

PJ_gins8.o: PJ_gins8.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_gins8.o PJ_gins8.c

PJ_gnom.o: PJ_gnom.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_gnom.o PJ_gnom.c

PJ_gn_sinu.o: PJ_gn_sinu.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_gn_sinu.o PJ_gn_sinu.c

PJ_goode.o: PJ_goode.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_goode.o PJ_goode.c

pj_gridinfo.o: pj_gridinfo.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_gridinfo.o pj_gridinfo.c

pj_gridlist.o: pj_gridlist.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_gridlist.o pj_gridlist.c

PJ_hammer.o: PJ_hammer.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_hammer.o PJ_hammer.c

PJ_hatano.o: PJ_hatano.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_hatano.o PJ_hatano.c

PJ_imw_p.o: PJ_imw_p.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_imw_p.o PJ_imw_p.c

pj_init.o: pj_init.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_init.o pj_init.c

pj_inv.o: pj_inv.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_inv.o pj_inv.c

PJ_krovak.o: PJ_krovak.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_krovak.o PJ_krovak.c

PJ_labrd.o: PJ_labrd.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_labrd.o PJ_labrd.c

PJ_laea.o: PJ_laea.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_laea.o PJ_laea.c

PJ_lagrng.o: PJ_lagrng.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_lagrng.o PJ_lagrng.c

PJ_larr.o: PJ_larr.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_larr.o PJ_larr.c

PJ_lask.o: PJ_lask.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_lask.o PJ_lask.c

pj_latlong.o: pj_latlong.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_latlong.o pj_latlong.c

PJ_lcca.o: PJ_lcca.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_lcca.o PJ_lcca.c

PJ_lcc.o: PJ_lcc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_lcc.o PJ_lcc.c

pj_list.o: pj_list.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_list.o pj_list.c

PJ_loxim.o: PJ_loxim.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_loxim.o PJ_loxim.c

PJ_lsat.o: PJ_lsat.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_lsat.o PJ_lsat.c

pj_malloc.o: pj_malloc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_malloc.o pj_malloc.c

PJ_mbtfpp.o: PJ_mbtfpp.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_mbtfpp.o PJ_mbtfpp.c

PJ_mbtfpq.o: PJ_mbtfpq.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_mbtfpq.o PJ_mbtfpq.c

PJ_mbt_fps.o: PJ_mbt_fps.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_mbt_fps.o PJ_mbt_fps.c

PJ_merc.o: PJ_merc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_merc.o PJ_merc.c

PJ_mill.o: PJ_mill.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_mill.o PJ_mill.c

pj_mlfn.o: pj_mlfn.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_mlfn.o pj_mlfn.c

PJ_mod_ster.o: PJ_mod_ster.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_mod_ster.o PJ_mod_ster.c

PJ_moll.o: PJ_moll.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_moll.o PJ_moll.c

pj_msfn.o: pj_msfn.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_msfn.o pj_msfn.c

PJ_nell_h.o: PJ_nell_h.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_nell_h.o PJ_nell_h.c

PJ_nell.o: PJ_nell.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_nell.o PJ_nell.c

PJ_nocol.o: PJ_nocol.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_nocol.o PJ_nocol.c

PJ_nsper.o: PJ_nsper.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_nsper.o PJ_nsper.c

PJ_nzmg.o: PJ_nzmg.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_nzmg.o PJ_nzmg.c

PJ_ob_tran.o: PJ_ob_tran.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_ob_tran.o PJ_ob_tran.c

PJ_ocea.o: PJ_ocea.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_ocea.o PJ_ocea.c

PJ_oea.o: PJ_oea.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_oea.o PJ_oea.c

PJ_omerc.o: PJ_omerc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_omerc.o PJ_omerc.c

pj_open_lib.o: pj_open_lib.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_open_lib.o pj_open_lib.c

PJ_ortho.o: PJ_ortho.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_ortho.o PJ_ortho.c

pj_param.o: pj_param.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_param.o pj_param.c

pj_phi2.o: pj_phi2.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_phi2.o pj_phi2.c

PJ_poly.o: PJ_poly.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_poly.o PJ_poly.c

pj_pr_list.o: pj_pr_list.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_pr_list.o pj_pr_list.c

PJ_putp2.o: PJ_putp2.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_putp2.o PJ_putp2.c

PJ_putp3.o: PJ_putp3.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_putp3.o PJ_putp3.c

PJ_putp4p.o: PJ_putp4p.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_putp4p.o PJ_putp4p.c

PJ_putp5.o: PJ_putp5.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_putp5.o PJ_putp5.c

PJ_putp6.o: PJ_putp6.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_putp6.o PJ_putp6.c

pj_qsfn.o: pj_qsfn.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_qsfn.o pj_qsfn.c

pj_release.o: pj_release.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_release.o pj_release.c

PJ_robin.o: PJ_robin.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_robin.o PJ_robin.c

PJ_rpoly.o: PJ_rpoly.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_rpoly.o PJ_rpoly.c

PJ_sconics.o: PJ_sconics.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_sconics.o PJ_sconics.c

PJ_somerc.o: PJ_somerc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_somerc.o PJ_somerc.c

PJ_sterea.o: PJ_sterea.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_sterea.o PJ_sterea.c

PJ_stere.o: PJ_stere.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_stere.o PJ_stere.c

pj_strerrno.o: pj_strerrno.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_strerrno.o pj_strerrno.c

PJ_sts.o: PJ_sts.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_sts.o PJ_sts.c

PJ_tcc.o: PJ_tcc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_tcc.o PJ_tcc.c

PJ_tcea.o: PJ_tcea.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_tcea.o PJ_tcea.c

PJ_tmerc.o: PJ_tmerc.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_tmerc.o PJ_tmerc.c

PJ_tpeqd.o: PJ_tpeqd.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_tpeqd.o PJ_tpeqd.c

pj_transform.o: pj_transform.c projects.h \
		proj_api.h \
		geocent.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_transform.o pj_transform.c

pj_tsfn.o: pj_tsfn.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_tsfn.o pj_tsfn.c

pj_units.o: pj_units.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_units.o pj_units.c

PJ_urm5.o: PJ_urm5.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_urm5.o PJ_urm5.c

PJ_urmfps.o: PJ_urmfps.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_urmfps.o PJ_urmfps.c

pj_utils.o: pj_utils.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_utils.o pj_utils.c

PJ_vandg2.o: PJ_vandg2.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_vandg2.o PJ_vandg2.c

PJ_vandg4.o: PJ_vandg4.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_vandg4.o PJ_vandg4.c

PJ_vandg.o: PJ_vandg.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_vandg.o PJ_vandg.c

PJ_wag2.o: PJ_wag2.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_wag2.o PJ_wag2.c

PJ_wag3.o: PJ_wag3.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_wag3.o PJ_wag3.c

PJ_wag7.o: PJ_wag7.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_wag7.o PJ_wag7.c

PJ_wink1.o: PJ_wink1.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_wink1.o PJ_wink1.c

PJ_wink2.o: PJ_wink2.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o PJ_wink2.o PJ_wink2.c

pj_zpoly1.o: pj_zpoly1.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o pj_zpoly1.o pj_zpoly1.c

proj_mdist.o: proj_mdist.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o proj_mdist.o proj_mdist.c

proj_rouss.o: proj_rouss.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o proj_rouss.o proj_rouss.c

rtodms.o: rtodms.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o rtodms.o rtodms.c

vector1.o: vector1.c projects.h \
		proj_api.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o vector1.o vector1.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

